{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Desktop/weather-app/src/App.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import './App.css';\n// import \"bootstrap/dist/css/bootstrap.min.css\"\n// import { useEffect, useState } from \"react\";\n\n// function App() {\n\n//   const apiKey = \"5fa957a6cbd2c5e398e28868eded2766\"\n//   const [inputCity, setInputCity] = useState(\"\")\n//   const [data, setData] = useState({})\n\n//   const getWetherDetails = (cityName) => {\n//     if (!cityName) return\n//     const apiURL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&appid=\" + apiKey\n//     axios.get(apiURL).then((res) => {\n//       console.log(\"response\", res.data)\n//       setData(res.data)\n//     }).catch((err) => {\n//       console.log(\"err\", err)\n//     })\n//   }\n\n//   const handleChangeInput = (e) => {\n//     console.log(\"value\", e.target.value)\n//     setInputCity(e.target.value)\n//   }\n\n//   const handleSearch = () => {\n//     getWetherDetails(inputCity)\n//   }\n\n//   const getWindDirection = (degrees) => {\n//     const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n//     const index = Math.round(degrees / 45) % 8;\n//     return directions[index];\n// }\n\n//   return (\n//     <div className=\"col-md-12\">\n//     <div className=\"wetherBg\">\n//       <h1 className=\"heading\">Weather App</h1>\n\n//       <div className=\"d-grid gap-3 col-4 mt-4\">\n//         <input type=\"text\" className=\"form-control\"\n//           value={inputCity}\n//           onChange={handleChangeInput} />\n//         <button className=\"btn btn-primary\" type=\"button\"\n//           onClick={handleSearch}\n//         >Search</button>\n//       </div>\n//     </div>\n\n//     {Object.keys(data).length > 0 &&\n//       <div className=\"col-md-12 text-center mt-5\">\n\n//         <div className=\"shadow rounded wetherResultBox\">\n//           <img className=\"weathorIcon\"\n//             src=\"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\" />\n\n//           <h5 className=\"weathorCity\">\n//             {data?.name}\n//           </h5>\n//           <h6 className=\"weathorTemp\">{((data?.main?.temp) - 273.15).toFixed(2)}°C</h6>\n\n//           <h3 className=\"\">Max Tem {((data?.main?.temp_max) - 273.15).toFixed(2)}°C & Min Tem {((data?.main?.temp_min) - 273.15).toFixed(2)}°C </h3>\n//           <h3 className=\"\"> Humidity: {((data?.main?.humidity) )} % </h3>\n//           {/* <h3 className=\"\"> Wind Speed: {((data?.wind?.speed) )} m/s </h3> */}\n//          <h3> Wind: {data?.wind?.speed} m/s {getWindDirection(data?.wind?.deg)}</h3>\n//           <h3 className=\"\">Description: {data?.weather[0]?.description ?? 'N/A'} </h3>\n\n//         </div>\n//       </div>\n//     }\n\n// {forecast.length > 0 && (\n//         <div className=\"col-md-12 text-center mt-5\">\n//           <h2>5-Day Forecast</h2>\n//           <div className=\"row\">\n//             {forecast.slice(0, 5).map((forecastItem, index) => (\n//               <div className=\"col-md-2\" key={index}>\n//                 <div className=\"shadow rounded weatherResultBox\">\n//                   <h6>{forecastItem?.dt_txt}</h6>\n//                   <p>\n//                     Temp:{\" \"}\n//                     {(forecastItem?.main?.temp - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>\n//                     Max Temp:{\" \"}\n//                     {(forecastItem?.main?.temp_max - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>\n//                     Min Temp:{\" \"}\n//                     {(forecastItem?.main?.temp_min - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>Humidity: {forecastItem?.main?.humidity} %</p>\n//                   <p>\n//                     Wind: {forecastItem?.wind?.speed} m/s{\" \"}\n//                     {getWindDirection(forecastItem?.wind?.deg)}\n//                   </p>\n//                   <p>\n//                     Description: {forecastItem?.weather[0]?.description ?? \"N/A\"}\n//                   </p>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//   </div>\n\n//   );\n// }\n\n// export default App;\n\nimport axios from \"axios\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _currentWeather$main, _currentWeather$main2, _currentWeather$main3, _currentWeather$main4, _currentWeather$wind, _currentWeather$wind2, _currentWeather$weath, _currentWeather$weath2;\n  const apiKey = \"5fa957a6cbd2c5e398e28868eded2766\";\n  const [inputCity, setInputCity] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n  const getWeatherDetails = cityName => {\n    if (!cityName) return;\n    const currentWeatherURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}`;\n    const forecastURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`;\n    axios.all([axios.get(currentWeatherURL), axios.get(forecastURL)]).then(axios.spread((currentRes, forecastRes) => {\n      console.log(\"Current Weather response\", currentRes.data);\n      setCurrentWeather(currentRes.data);\n    })).catch(err => {\n      console.log(\"Error\", err);\n    });\n  };\n  useEffect(() => {\n    // Fetch default city weather on initial load\n    getWeatherDetails(\"Begusarai\");\n  }, []); // Empty dependency array ensures the effect runs only once after initial render\n\n  const handleChangeInput = e => {\n    setInputCity(e.target.value);\n  };\n  const handleSearch = () => {\n    getWeatherDetails(inputCity);\n  };\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherBg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-3 col-4 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: inputCity,\n          onChange: handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), Object.keys(currentWeather).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow rounded weatherResultBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weatherIcon\",\n          src: \"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\",\n          alt: \"Weather Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"weatherCity\",\n          children: currentWeather === null || currentWeather === void 0 ? void 0 : currentWeather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"weatherTemp\",\n          children: [((currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$main = currentWeather.main) === null || _currentWeather$main === void 0 ? void 0 : _currentWeather$main.temp) - 273.15).toFixed(2), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"\",\n          children: [\"Max Temp:\", \" \", ((currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$main2 = currentWeather.main) === null || _currentWeather$main2 === void 0 ? void 0 : _currentWeather$main2.temp_max) - 273.15).toFixed(2), \"\\xB0C & Min Temp: \", ((currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$main3 = currentWeather.main) === null || _currentWeather$main3 === void 0 ? void 0 : _currentWeather$main3.temp_min) - 273.15).toFixed(2), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"\",\n          children: [\"Humidity: \", currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$main4 = currentWeather.main) === null || _currentWeather$main4 === void 0 ? void 0 : _currentWeather$main4.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Wind Speed: \", currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$wind = currentWeather.wind) === null || _currentWeather$wind === void 0 ? void 0 : _currentWeather$wind.speed, \" m/s\", \" Direction: \", getWindDirection(currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$wind2 = currentWeather.wind) === null || _currentWeather$wind2 === void 0 ? void 0 : _currentWeather$wind2.deg)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"\",\n          children: [\"Description: \", (_currentWeather$weath = currentWeather === null || currentWeather === void 0 ? void 0 : (_currentWeather$weath2 = currentWeather.weather[0]) === null || _currentWeather$weath2 === void 0 ? void 0 : _currentWeather$weath2.description) !== null && _currentWeather$weath !== void 0 ? _currentWeather$weath : \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"5-Day Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.slice(0, 5).map((forecastItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow rounded weatherResultBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: forecastItem.dt_txt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temp: \", (forecastItem.main.temp - 273.15).toFixed(2), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", forecastItem.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qSu0qEoQ82ujLVec1Lwa9X8hLdc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","App","_s","_currentWeather$main","_currentWeather$main2","_currentWeather$main3","_currentWeather$main4","_currentWeather$wind","_currentWeather$wind2","_currentWeather$weath","_currentWeather$weath2","apiKey","inputCity","setInputCity","currentWeather","setCurrentWeather","forecast","setForecast","getWeatherDetails","cityName","currentWeatherURL","forecastURL","all","get","then","spread","currentRes","forecastRes","console","log","data","catch","err","handleChangeInput","e","target","value","handleSearch","getWindDirection","degrees","directions","index","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","Object","keys","length","src","alt","name","main","temp","toFixed","temp_max","temp_min","humidity","wind","speed","deg","weather","description","slice","map","forecastItem","dt_txt","_c","$RefreshReg$"],"sources":["/Users/ankush/Desktop/weather-app/src/App.js"],"sourcesContent":["// import axios from \"axios\";\n// import './App.css';\n// import \"bootstrap/dist/css/bootstrap.min.css\"\n// import { useEffect, useState } from \"react\";\n\n// function App() {\n\n//   const apiKey = \"5fa957a6cbd2c5e398e28868eded2766\"\n//   const [inputCity, setInputCity] = useState(\"\")\n//   const [data, setData] = useState({})\n\n\n\n//   const getWetherDetails = (cityName) => {\n//     if (!cityName) return\n//     const apiURL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&appid=\" + apiKey\n//     axios.get(apiURL).then((res) => {\n//       console.log(\"response\", res.data)\n//       setData(res.data)\n//     }).catch((err) => {\n//       console.log(\"err\", err)\n//     })\n//   }\n\n//   const handleChangeInput = (e) => {\n//     console.log(\"value\", e.target.value)\n//     setInputCity(e.target.value)\n//   }\n\n//   const handleSearch = () => {\n//     getWetherDetails(inputCity)\n//   }\n\n//   const getWindDirection = (degrees) => {\n//     const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n//     const index = Math.round(degrees / 45) % 8;\n//     return directions[index];\n// }\n\n\n//   return (\n//     <div className=\"col-md-12\">\n//     <div className=\"wetherBg\">\n//       <h1 className=\"heading\">Weather App</h1>\n\n//       <div className=\"d-grid gap-3 col-4 mt-4\">\n//         <input type=\"text\" className=\"form-control\"\n//           value={inputCity}\n//           onChange={handleChangeInput} />\n//         <button className=\"btn btn-primary\" type=\"button\"\n//           onClick={handleSearch}\n//         >Search</button>\n//       </div>\n//     </div>\n\n//     {Object.keys(data).length > 0 &&\n//       <div className=\"col-md-12 text-center mt-5\">\n\n//         <div className=\"shadow rounded wetherResultBox\">\n//           <img className=\"weathorIcon\"\n//             src=\"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\" />\n\n//           <h5 className=\"weathorCity\">\n//             {data?.name}\n//           </h5>\n//           <h6 className=\"weathorTemp\">{((data?.main?.temp) - 273.15).toFixed(2)}°C</h6>\n          \n//           <h3 className=\"\">Max Tem {((data?.main?.temp_max) - 273.15).toFixed(2)}°C & Min Tem {((data?.main?.temp_min) - 273.15).toFixed(2)}°C </h3>\n//           <h3 className=\"\"> Humidity: {((data?.main?.humidity) )} % </h3>\n//           {/* <h3 className=\"\"> Wind Speed: {((data?.wind?.speed) )} m/s </h3> */}\n//          <h3> Wind: {data?.wind?.speed} m/s {getWindDirection(data?.wind?.deg)}</h3>\n//           <h3 className=\"\">Description: {data?.weather[0]?.description ?? 'N/A'} </h3>\n         \n//         </div>\n//       </div>\n//     }\n\n// {forecast.length > 0 && (\n//         <div className=\"col-md-12 text-center mt-5\">\n//           <h2>5-Day Forecast</h2>\n//           <div className=\"row\">\n//             {forecast.slice(0, 5).map((forecastItem, index) => (\n//               <div className=\"col-md-2\" key={index}>\n//                 <div className=\"shadow rounded weatherResultBox\">\n//                   <h6>{forecastItem?.dt_txt}</h6>\n//                   <p>\n//                     Temp:{\" \"}\n//                     {(forecastItem?.main?.temp - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>\n//                     Max Temp:{\" \"}\n//                     {(forecastItem?.main?.temp_max - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>\n//                     Min Temp:{\" \"}\n//                     {(forecastItem?.main?.temp_min - 273.15).toFixed(2)}°C\n//                   </p>\n//                   <p>Humidity: {forecastItem?.main?.humidity} %</p>\n//                   <p>\n//                     Wind: {forecastItem?.wind?.speed} m/s{\" \"}\n//                     {getWindDirection(forecastItem?.wind?.deg)}\n//                   </p>\n//                   <p>\n//                     Description: {forecastItem?.weather[0]?.description ?? \"N/A\"}\n//                   </p>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//   </div>\n\n//   );\n// }\n\n// export default App;\n\n\n\n\nimport axios from \"axios\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const apiKey = \"5fa957a6cbd2c5e398e28868eded2766\";\n  const [inputCity, setInputCity] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n\n  const getWeatherDetails = (cityName) => {\n    if (!cityName) return;\n    const currentWeatherURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}`;\n    const forecastURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${apiKey}`;\n\n    axios.all([axios.get(currentWeatherURL), axios.get(forecastURL)])\n      .then(axios.spread((currentRes, forecastRes) => {\n        console.log(\"Current Weather response\", currentRes.data);\n     \n        setCurrentWeather(currentRes.data);\n       \n      }))\n      .catch((err) => {\n        console.log(\"Error\", err);\n      });\n  };\n\n  useEffect(() => {\n    // Fetch default city weather on initial load\n    getWeatherDetails(\"Begusarai\");\n  }, []); // Empty dependency array ensures the effect runs only once after initial render\n\n  const handleChangeInput = (e) => {\n    setInputCity(e.target.value);\n  };\n\n  const handleSearch = () => {\n    getWeatherDetails(inputCity);\n  };\n\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"weatherBg\">\n        <h1 className=\"heading\">Weather App</h1>\n        <div className=\"d-grid gap-3 col-4 mt-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={inputCity}\n            onChange={handleChangeInput}\n          />\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={handleSearch}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n\n      {Object.keys(currentWeather).length > 0 && (\n        <div className=\"col-md-12 text-center mt-5\">\n          <div className=\"shadow rounded weatherResultBox\">\n            <img\n              className=\"weatherIcon\"\n              src=\"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\"\n              alt=\"Weather Icon\"\n            />\n            <h5 className=\"weatherCity\">{currentWeather?.name}</h5>\n            <h6 className=\"weatherTemp\">\n              {(currentWeather?.main?.temp - 273.15).toFixed(2)}°C\n            </h6>\n            <h3 className=\"\">\n              Max Temp:{\" \"}\n              {(currentWeather?.main?.temp_max - 273.15).toFixed(2)}°C & Min\n              Temp: {(currentWeather?.main?.temp_min - 273.15).toFixed(2)}°C\n            </h3>\n            <h3 className=\"\">Humidity: {currentWeather?.main?.humidity} %</h3>\n            <h3>\n              Wind Speed: {currentWeather?.wind?.speed} m/s{\" Direction: \"}\n              {getWindDirection(currentWeather?.wind?.deg)}\n            </h3>\n            <h3 className=\"\">\n              Description: {currentWeather?.weather[0]?.description ?? \"N/A\"}\n            </h3>\n          </div>\n        </div>\n      )}\n\n      {/* Display forecast data */}\n      {forecast.length > 0 && (\n  <div className=\"col-md-12 text-center mt-5\">\n    <h2>5-Day Forecast</h2>\n    <div className=\"row\">\n      {forecast.slice(0, 5).map((forecastItem, index) => (\n        <div className=\"col-md-2\" key={index}>\n          <div className=\"shadow rounded weatherResultBox\">\n            <h6>{forecastItem.dt_txt}</h6>\n            <p>Temp: {(forecastItem.main.temp - 273.15).toFixed(2)}°C</p>\n            <p>Description: {forecastItem.weather[0].description}</p>\n            {/* Add appropriate weather icon */}\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n)}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}