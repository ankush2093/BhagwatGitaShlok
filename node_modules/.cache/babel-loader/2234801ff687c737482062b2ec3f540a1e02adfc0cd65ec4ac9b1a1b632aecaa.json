{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/Slokcard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"../css/Slokcard.css\";\n// import { useSpeechSynthesis } from 'react-speech-kit';\n\n// const Slokcard = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [expandedChapterIndex, setExpandedChapterIndex] = useState(null);\n\n//   const { speak } = useSpeechSynthesis();\n\n//   useEffect(() => {\n//     const fetchChapters = async () => {\n//       try {\n//         const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n//         setChapters(response.data);\n//         // console.log(chapters);\n//       } catch (error) {\n//         console.error(\"Error\", error);\n//       }\n//     };\n\n//     fetchChapters();\n//   }, []);\n\n//   const handleToggleChapter = (index) => {\n//     setExpandedChapterIndex(index === expandedChapterIndex ? null : index);\n//   };\n\n//   const speakSlowly = (text) => {\n//     speak({ text, rate: 0.5 }); // Set rate to 0.5 for slower speech\n//   };\n\n//   return (\n//     <div className=\"slok-card-container\">\n//       {chapters.map((chapter, index) => (\n//         <div key={index} className=\"slok-card\">\n//           <h2>{chapter.name}</h2>\n//           <p>Chapter Number: {chapter.chapter_number}</p>\n//           <p>Verses Count: {chapter.verses_count}</p>\n//           <div className=\"dropdown\">\n//             <button className=\"dropbtn\" onClick={() => handleToggleChapter(index)}>\n//               View More\n//             </button>\n//             {expandedChapterIndex === index && (\n//               <div className=\"dropdown-content\">\n//                 <p>Summary (English): {chapter.summary.en}</p>\n//                 <button onClick={() => speakSlowly(chapter.summary.en)}>Speak Slowly</button>\n//                 <p>Summary (Hindi): {chapter.summary.hi}</p>\n\n//               </div>\n//             )}\n//           </div>\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Slokcard;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"../css/Slokcard.css\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slokcard = () => {\n  _s();\n  const [chapters, setChapters] = useState([]);\n  const [expandedChapterIndex, setExpandedChapterIndex] = useState(null);\n  const {\n    speak\n  } = useSpeechSynthesis();\n  useEffect(() => {\n    const fetchChapters = async () => {\n      try {\n        // Send a GET request to fetch chapters data from the API using fetch\n        const response = await fetch(\"https://bhagavadgitaapi.in/chapters\");\n        // Check if the response is successful (status code 200)\n        if (response.ok) {\n          // Parse the response body as JSON and update the state with fetched chapters data\n          const data = await response.json();\n          setChapters(data);\n          // Uncomment the next line to see the fetched chapters in the console\n          // console.log(chapters);\n        } else {\n          // If response is not successful, throw an error\n          throw new Error('Failed to fetch data');\n        }\n      } catch (error) {\n        // Log any errors that occur during the API request\n        console.error(\"Error\", error);\n      }\n    };\n\n    // Call the fetchChapters function when the component mounts (empty dependency array)\n    fetchChapters();\n  }, []); // The empty dependency array ensures this effect runs only once when the component mounts\n\n  const handleToggleChapter = index => {\n    setExpandedChapterIndex(index === expandedChapterIndex ? null : index);\n  };\n  const speakSlowly = text => {\n    speak({\n      text,\n      rate: 0.5\n    }); // Set rate to 0.5 for slower speech\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slok-card-container\",\n    children: chapters.map((chapter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slok-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chapter.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chapter Number: \", chapter.chapter_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Verses Count: \", chapter.verses_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dropbtn\",\n          onClick: () => handleToggleChapter(index),\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), expandedChapterIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Summary (English): \", chapter.summary.en]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => speakSlowly(chapter.summary.en),\n            children: \"Speak Slowly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Summary (Hindi): \", chapter.summary.hi]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Slokcard, \"SUIah6kkytM/nkFKrUmJV2fCCi4=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = Slokcard;\nexport default Slokcard;\nvar _c;\n$RefreshReg$(_c, \"Slokcard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useSpeechSynthesis","jsxDEV","_jsxDEV","Slokcard","_s","chapters","setChapters","expandedChapterIndex","setExpandedChapterIndex","speak","fetchChapters","response","fetch","ok","data","json","Error","error","console","handleToggleChapter","index","speakSlowly","text","rate","className","children","map","chapter","name","fileName","_jsxFileName","lineNumber","columnNumber","chapter_number","verses_count","onClick","summary","en","hi","_c","$RefreshReg$"],"sources":["/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/Slokcard.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"../css/Slokcard.css\";\n// import { useSpeechSynthesis } from 'react-speech-kit';\n\n// const Slokcard = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [expandedChapterIndex, setExpandedChapterIndex] = useState(null);\n  \n//   const { speak } = useSpeechSynthesis();\n\n//   useEffect(() => {\n//     const fetchChapters = async () => {\n//       try {\n//         const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n//         setChapters(response.data);\n//         // console.log(chapters);\n//       } catch (error) {\n//         console.error(\"Error\", error);\n//       }\n//     };\n\n//     fetchChapters();\n//   }, []);\n\n//   const handleToggleChapter = (index) => {\n//     setExpandedChapterIndex(index === expandedChapterIndex ? null : index);\n//   };\n\n//   const speakSlowly = (text) => {\n//     speak({ text, rate: 0.5 }); // Set rate to 0.5 for slower speech\n//   };\n\n//   return (\n//     <div className=\"slok-card-container\">\n//       {chapters.map((chapter, index) => (\n//         <div key={index} className=\"slok-card\">\n//           <h2>{chapter.name}</h2>\n//           <p>Chapter Number: {chapter.chapter_number}</p>\n//           <p>Verses Count: {chapter.verses_count}</p>\n//           <div className=\"dropdown\">\n//             <button className=\"dropbtn\" onClick={() => handleToggleChapter(index)}>\n//               View More\n//             </button>\n//             {expandedChapterIndex === index && (\n//               <div className=\"dropdown-content\">\n//                 <p>Summary (English): {chapter.summary.en}</p>\n//                 <button onClick={() => speakSlowly(chapter.summary.en)}>Speak Slowly</button>\n//                 <p>Summary (Hindi): {chapter.summary.hi}</p>\n\n//               </div>\n//             )}\n//           </div>\n//           <hr />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Slokcard;\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"../css/Slokcard.css\";\nimport { useSpeechSynthesis } from 'react-speech-kit';\n\nconst Slokcard = () => {\n  const [chapters, setChapters] = useState([]);\n  const [expandedChapterIndex, setExpandedChapterIndex] = useState(null);\n  \n  const { speak } = useSpeechSynthesis();\n\n  useEffect(() => {\n    const fetchChapters = async () => {\n      try {\n        // Send a GET request to fetch chapters data from the API using fetch\n        const response = await fetch(\"https://bhagavadgitaapi.in/chapters\");\n        // Check if the response is successful (status code 200)\n        if (response.ok) {\n          // Parse the response body as JSON and update the state with fetched chapters data\n          const data = await response.json();\n          setChapters(data);\n          // Uncomment the next line to see the fetched chapters in the console\n          // console.log(chapters);\n        } else {\n          // If response is not successful, throw an error\n          throw new Error('Failed to fetch data');\n        }\n      } catch (error) {\n        // Log any errors that occur during the API request\n        console.error(\"Error\", error);\n      }\n    };\n\n    // Call the fetchChapters function when the component mounts (empty dependency array)\n    fetchChapters();\n  }, []); // The empty dependency array ensures this effect runs only once when the component mounts\n\n\n  const handleToggleChapter = (index) => {\n    setExpandedChapterIndex(index === expandedChapterIndex ? null : index);\n  };\n\n  const speakSlowly = (text) => {\n    speak({ text, rate: 0.5 }); // Set rate to 0.5 for slower speech\n  };\n\n  return (\n    <div className=\"slok-card-container\">\n      {chapters.map((chapter, index) => (\n        <div key={index} className=\"slok-card\">\n          <h2>{chapter.name}</h2>\n          <p>Chapter Number: {chapter.chapter_number}</p>\n          <p>Verses Count: {chapter.verses_count}</p>\n          <div className=\"dropdown\">\n            <button className=\"dropbtn\" onClick={() => handleToggleChapter(index)}>\n              View More\n            </button>\n            {expandedChapterIndex === index && (\n              <div className=\"dropdown-content\">\n                <p>Summary (English): {chapter.summary.en}</p>\n                <button onClick={() => speakSlowly(chapter.summary.en)}>Speak Slowly</button>\n                <p>Summary (Hindi): {chapter.summary.hi}</p>\n\n              </div>\n            )}\n          </div>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Slokcard;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtE,MAAM;IAAEY;EAAM,CAAC,GAAGT,kBAAkB,CAAC,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE;QACA,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf;UACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCT,WAAW,CAACQ,IAAI,CAAC;UACjB;UACA;QACF,CAAC,MAAM;UACL;UACA,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC/B;IACF,CAAC;;IAED;IACAP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;IACrCZ,uBAAuB,CAACY,KAAK,KAAKb,oBAAoB,GAAG,IAAI,GAAGa,KAAK,CAAC;EACxE,CAAC;EAED,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5Bb,KAAK,CAAC;MAAEa,IAAI;MAAEC,IAAI,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EACjCpB,QAAQ,CAACqB,GAAG,CAAC,CAACC,OAAO,EAAEP,KAAK,kBAC3BlB,OAAA;MAAiBsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACpCvB,OAAA;QAAAuB,QAAA,EAAKE,OAAO,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvB9B,OAAA;QAAAuB,QAAA,GAAG,kBAAgB,EAACE,OAAO,CAACM,cAAc;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C9B,OAAA;QAAAuB,QAAA,GAAG,gBAAc,EAACE,OAAO,CAACO,YAAY;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C9B,OAAA;QAAKsB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBvB,OAAA;UAAQsB,SAAS,EAAC,SAAS;UAACW,OAAO,EAAEA,CAAA,KAAMhB,mBAAmB,CAACC,KAAK,CAAE;UAAAK,QAAA,EAAC;QAEvE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRzB,oBAAoB,KAAKa,KAAK,iBAC7BlB,OAAA;UAAKsB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BvB,OAAA;YAAAuB,QAAA,GAAG,qBAAmB,EAACE,OAAO,CAACS,OAAO,CAACC,EAAE;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9C9B,OAAA;YAAQiC,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACM,OAAO,CAACS,OAAO,CAACC,EAAE,CAAE;YAAAZ,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7E9B,OAAA;YAAAuB,QAAA,GAAG,mBAAiB,EAACE,OAAO,CAACS,OAAO,CAACE,EAAE;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAjBEZ,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlEID,QAAQ;EAAA,QAIMH,kBAAkB;AAAA;AAAAuC,EAAA,GAJhCpC,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}