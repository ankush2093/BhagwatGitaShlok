{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/HomePage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import LordKrisha from '../img/krishnag.png';\n// import '../css/Homepage.css'\n\n// const HomePage = () => {\n//     return (\n//         <div className='content-main-box'>\n//             <div className='content-box'>\n//                 <img className='MainLordKrishnaImg' alt='logo' src={LordKrisha}></img>\n\n//             </div>\n\n//             <div className='content-box'>\n//                 <h1>श्रीमद्‍भगवद्‍गीता</h1>\n//                 <div class=\"box\">\n//                     <h6>आज का श्लोक</h6>\n//                     <hr></hr>\n\n//                     <h3>श्रीभगवानुवाच | भूय एव महाबाहो शृणु मे परमं वचः | यत्तेऽहं प्रीयमाणाय वक्ष्यामि हितकाम्यया ||१०-१||\n\n//                         ।।10.1।। श्रीभगवान् ने कहा -- हे महाबाहो ! पुन: तुम मेरे परम वचनों का श्रवण करो, जो मैं तुझ अतिशय प्रेम रखने वाले के लिये हित की इच्छा से कहूँगा।।</h3>\n//                     <br></br>\n\n//                     <h3>\n//                         10.1 The Blessed Lord said O mighty-armed one, listen over again ot My supreme utterance, which I, wishing your welfare, shall speak to you who take delight (in it).\n//                     </h3>\n\n//                     <br></br>\n\n//                     <h5>- Bhagavad Gita  Chapter   10 . 1</h5>\n\n//                     <hr></hr>\n//                     <div className='soclial'>\n//                         <i class=\"fa-brands fa-square-whatsapp whatsaap\"></i>\n//                         <i className=\"fa-brands fa-facebook facebook\"></i>\n//                     </div>\n\n//                 </div>\n\n//                 <button className=\"btn btn-danger m-4 text-center\">\n//                     <i className=\"fas fa-sync fa-spin\" /> Another Shlok\n//                 </button>\n\n//             </div>\n\n//         </div>\n\n//     )\n// }\n\n// export default HomePage\n\n// import React, { useState, useEffect } from 'react';\n// import LordKrishna from '../img/krishnag.png';\n// import '../css/Homepage.css';\n\n// const HomePage = () => {\n//     const [loading, setLoading] = useState(false);\n//     const [data, setData] = useState(null);\n\n//     const getShlok = () => {\n//         setLoading(true);\n\n//         const chapter = Math.floor(Math.random() * 18) + 1; // Generate a random chapter number (1-18)\n//         const verse = Math.floor(Math.random() * 47) + 1; // Generate a random verse number (1-47)\n\n//         fetch(`https://bhagavadgitaapi.in/slok/${chapter}/${verse}/`)\n//             .then((response) => {\n//                 if (!response.ok) {\n//                     setLoading(false);\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then((data) => {\n//                 console.log(data);\n//                 setData(data);\n//                 setLoading(false);\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching shlok:', error);\n//                 getShlok(); // Retry fetching shlok if there's an error\n//             });\n//     };\n\n//     useEffect(() => {\n//         getShlok(); // Fetch shlok when component mounts\n//     }, []);\n\n//     return (\n//         <div className='content-main-box'>\n//             <div className='content-box'>\n//                 <img className='MainLordKrishnaImg' alt='logo' src={LordKrishna} />\n//             </div>\n\n//             <div className='content-box'>\n//                 <h1>श्रीमद्‍भगवद्‍गीता</h1>\n\n//                 {loading ? (\n//                     // <img alt='loading' src='https://i.gifer.com/ZKZg.gif'></img>\n//                     <p>Loading....</p>\n//                 ) : (\n\n//                     <div className=\"box\">\n//                         <h3>आज का श्लोक</h3><hr></hr>\n//                         <h2>Chapter {data.chapter_number}, Verse {data.verse_number}</h2>\n//                         <p>{data.slok}</p>\n\n//                     </div>)}\n\n//                 <button className=\"btn btn-danger m-4 text-center\" onClick={getShlok}>\n//                     <i className=\"fas fa-sync fa-spin\" /> Another Shlok\n//                 </button>\n\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default HomePage;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const getShlok = () => {\n    setLoading(true);\n    const chapter = Math.floor(Math.random() * 18) + 1; // Generate a random chapter number (1-18)\n    const verse = Math.floor(Math.random() * 47) + 1; // Generate a random verse number (1-47)\n\n    fetch(`https://bhagavadgitaapi.in/slok/${chapter}/${verse}/`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching shlok:', error);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    getShlok(); // Fetch shlok when component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shrimad Bhagavad Gita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Chapter \", data.chapter_number, \", Verse \", data.verse_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.slok\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getShlok,\n        children: \"Get Another Shlok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"lFI4X7DkLyohXjGenZJnufgU0rU=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","loading","setLoading","data","setData","getShlok","chapter","Math","floor","random","verse","fetch","then","response","ok","Error","json","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","chapter_number","verse_number","slok","onClick","_c","$RefreshReg$"],"sources":["/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/HomePage.js"],"sourcesContent":["// import React from 'react';\n// import LordKrisha from '../img/krishnag.png';\n// import '../css/Homepage.css'\n\n// const HomePage = () => {\n//     return (\n//         <div className='content-main-box'>\n//             <div className='content-box'>\n//                 <img className='MainLordKrishnaImg' alt='logo' src={LordKrisha}></img>\n\n//             </div>\n\n\n\n//             <div className='content-box'>\n//                 <h1>श्रीमद्‍भगवद्‍गीता</h1>\n//                 <div class=\"box\">\n//                     <h6>आज का श्लोक</h6>\n//                     <hr></hr>\n\n//                     <h3>श्रीभगवानुवाच | भूय एव महाबाहो शृणु मे परमं वचः | यत्तेऽहं प्रीयमाणाय वक्ष्यामि हितकाम्यया ||१०-१||\n\n//                         ।।10.1।। श्रीभगवान् ने कहा -- हे महाबाहो ! पुन: तुम मेरे परम वचनों का श्रवण करो, जो मैं तुझ अतिशय प्रेम रखने वाले के लिये हित की इच्छा से कहूँगा।।</h3>\n//                     <br></br>\n\n//                     <h3>\n//                         10.1 The Blessed Lord said O mighty-armed one, listen over again ot My supreme utterance, which I, wishing your welfare, shall speak to you who take delight (in it).\n//                     </h3>\n\n//                     <br></br>\n\n//                     <h5>- Bhagavad Gita  Chapter   10 . 1</h5>\n\n//                     <hr></hr>\n//                     <div className='soclial'>\n//                         <i class=\"fa-brands fa-square-whatsapp whatsaap\"></i>\n//                         <i className=\"fa-brands fa-facebook facebook\"></i>\n//                     </div>\n\n//                 </div>\n\n//                 <button className=\"btn btn-danger m-4 text-center\">\n//                     <i className=\"fas fa-sync fa-spin\" /> Another Shlok\n//                 </button>\n\n//             </div>\n\n\n\n\n\n\n\n\n\n//         </div>\n\n//     )\n// }\n\n// export default HomePage\n\n\n// import React, { useState, useEffect } from 'react';\n// import LordKrishna from '../img/krishnag.png';\n// import '../css/Homepage.css';\n\n// const HomePage = () => {\n//     const [loading, setLoading] = useState(false);\n//     const [data, setData] = useState(null);\n\n//     const getShlok = () => {\n//         setLoading(true);\n\n//         const chapter = Math.floor(Math.random() * 18) + 1; // Generate a random chapter number (1-18)\n//         const verse = Math.floor(Math.random() * 47) + 1; // Generate a random verse number (1-47)\n\n//         fetch(`https://bhagavadgitaapi.in/slok/${chapter}/${verse}/`)\n//             .then((response) => {\n//                 if (!response.ok) {\n//                     setLoading(false);\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then((data) => {\n//                 console.log(data);\n//                 setData(data);\n//                 setLoading(false);\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching shlok:', error);\n//                 getShlok(); // Retry fetching shlok if there's an error\n//             });\n//     };\n\n//     useEffect(() => {\n//         getShlok(); // Fetch shlok when component mounts\n//     }, []);\n\n\n//     return (\n//         <div className='content-main-box'>\n//             <div className='content-box'>\n//                 <img className='MainLordKrishnaImg' alt='logo' src={LordKrishna} />\n//             </div>\n\n//             <div className='content-box'>\n//                 <h1>श्रीमद्‍भगवद्‍गीता</h1>\n\n//                 {loading ? (\n//                     // <img alt='loading' src='https://i.gifer.com/ZKZg.gif'></img>\n//                     <p>Loading....</p>\n//                 ) : (\n\n\n//                     <div className=\"box\">\n//                         <h3>आज का श्लोक</h3><hr></hr>\n//                         <h2>Chapter {data.chapter_number}, Verse {data.verse_number}</h2>\n//                         <p>{data.slok}</p>\n\n//                     </div>)}\n\n//                 <button className=\"btn btn-danger m-4 text-center\" onClick={getShlok}>\n//                     <i className=\"fas fa-sync fa-spin\" /> Another Shlok\n//                 </button>\n\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default HomePage;\n\n\n\nimport React, { useState, useEffect } from 'react';\n\nconst HomePage = () => {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState(null);\n\n    const getShlok = () => {\n        setLoading(true);\n\n        const chapter = Math.floor(Math.random() * 18) + 1; // Generate a random chapter number (1-18)\n        const verse = Math.floor(Math.random() * 47) + 1; // Generate a random verse number (1-47)\n\n        fetch(`https://bhagavadgitaapi.in/slok/${chapter}/${verse}/`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                console.log(data);\n                setData(data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                console.error('Error fetching shlok:', error);\n                setLoading(false);\n            });\n    };\n\n    useEffect(() => {\n        getShlok(); // Fetch shlok when component mounts\n    }, []);\n\n    return (\n        <div>\n            {loading ? (\n                <p>Loading...</p>\n            ) : (\n                <div>\n                    <h1>Shrimad Bhagavad Gita</h1>\n                    {data && (\n                        <div>\n                            <h2>Chapter {data.chapter_number}, Verse {data.verse_number}</h2>\n                            <p>{data.slok}</p>\n                        </div>\n                    )}\n                    <button onClick={getShlok}>Get Another Shlok</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAUA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACnBH,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;IAElDE,KAAK,CAAE,mCAAkCL,OAAQ,IAAGI,KAAM,GAAE,CAAC,CACxDE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAET,IAAI,IAAK;MACZc,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;MACjBC,OAAO,CAACD,IAAI,CAAC;MACbD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7ClB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAuB,QAAA,EACKpB,OAAO,gBACJH,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB3B,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BtB,IAAI,iBACDL,OAAA;QAAAuB,QAAA,gBACIvB,OAAA;UAAAuB,QAAA,GAAI,UAAQ,EAAClB,IAAI,CAACuB,cAAc,EAAC,UAAQ,EAACvB,IAAI,CAACwB,YAAY;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjE3B,OAAA;UAAAuB,QAAA,EAAIlB,IAAI,CAACyB;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACR,eACD3B,OAAA;QAAQ+B,OAAO,EAAExB,QAAS;QAAAgB,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CAlDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}