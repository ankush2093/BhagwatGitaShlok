{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/Slokcard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Button from \"react-bootstrap/Button\";\n// import Accordion from \"react-bootstrap/Accordion\";\n// import Modal from \"react-bootstrap/Modal\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n\n// const Slokcard = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [show, setShow] = useState(false);\n//   const [selectedChapter, setSelectedChapter] = useState(null);\n\n//   const handleClose = () => setShow(false);\n//   const handleShow = (chapter) => {\n//     setSelectedChapter(chapter);\n//     setShow(true);\n//   };\n\n//   useEffect(() => {\n//     const fetchChapters = async () => {\n//       try {\n//         const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n//         console.log(\"Current Chapter response\", response.data);\n//         setChapters(response.data);\n//       } catch (error) {\n//         console.error(\"Error\", error);\n//       }\n//     };\n\n//     fetchChapters();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Modal show={show} onHide={handleClose} centered>\n//         <Modal.Header>\n//           <Modal.Title className=\"text-center\">\n//             All Shlok From Chapter {selectedChapter?.chapter_number}\n//           </Modal.Title>\n//         </Modal.Header>\n\n//         <Modal.Body>\n//           <ListGroup>\n//           </ListGroup>\n//         </Modal.Body>\n\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={handleClose}>\n//             Save Changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n\n//       {chapters.map((chapter) => (\n\n//         <div key={chapter.chapter_number} className=\"card border-warning\">\n//           <div className=\"card-body\">\n//          <h5 className=\"card-title\"> {chapter.chapter_number}. {chapter.name}</h5>\n//          <h5 className=\"card-title\">{chapter.meaning.en} / {chapter.meaning.hi}  </h5>\n//             <p className=\"card-text\">\n//               <Accordion>\n//                 <Accordion.Item eventKey=\"0\">\n//                   <Accordion.Header>Hindi Summary</Accordion.Header>\n//                   <Accordion.Body>\n//                     <b>{chapter.summary?.hi}</b>\n//                   </Accordion.Body>\n//                 </Accordion.Item>\n//                 <Accordion.Item eventKey=\"1\">\n//                   <Accordion.Header>English Summary</Accordion.Header>\n//                   <Accordion.Body>\n//                     <b>{chapter.summary?.en}</b>\n//                   </Accordion.Body>\n//                 </Accordion.Item>\n//               </Accordion>\n//             </p>\n//             <p className=\"card-text text-center\">\n//               <button className=\"btn btn-outline-danger\" onClick={() => handleShow(chapter)}>\n//                 Read Sholks\n//               </button>\n//             </p>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Slokcard;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slokcard = () => {\n  _s();\n  const [chapters, setChapters] = useState([]);\n  const [show, setShow] = useState(false);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [shlokas, setShlokas] = useState([]);\n  const handleClose = () => setShow(false);\n  const handleShow = chapter => {\n    setSelectedChapter(chapter);\n    fetchShlokas(chapter.chapter_number);\n    setShow(true);\n  };\n  useEffect(() => {\n    const fetchChapters = async () => {\n      try {\n        const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n        setChapters(response.data);\n      } catch (error) {\n        console.error(\"Error fetching chapters:\", error);\n      }\n    };\n    fetchChapters();\n  }, []);\n  const fetchShlokas = async chapterNumber => {\n    try {\n      const response = await axios.get(`https://bhagavadgitaapi.in/slok/${chapterNumber}/2`);\n      setShlokas(response.data.shlokas);\n      console.log(\"this second response\" + chapterNumber);\n    } catch (error) {\n      console.error(\"Error fetching shlokas:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Slokcard, \"q6GZykJ9GoeK2/xOjPnT2N5Gem4=\");\n_c = Slokcard;\nexport default Slokcard;\nvar _c;\n$RefreshReg$(_c, \"Slokcard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","Accordion","Modal","ListGroup","jsxDEV","_jsxDEV","Slokcard","_s","chapters","setChapters","show","setShow","selectedChapter","setSelectedChapter","shlokas","setShlokas","handleClose","handleShow","chapter","fetchShlokas","chapter_number","fetchChapters","response","get","data","error","console","chapterNumber","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankush/Desktop/ankush_bhagwat_gita/src/components/Slokcard.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Button from \"react-bootstrap/Button\";\n// import Accordion from \"react-bootstrap/Accordion\";\n// import Modal from \"react-bootstrap/Modal\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n\n// const Slokcard = () => {\n//   const [chapters, setChapters] = useState([]);\n//   const [show, setShow] = useState(false);\n//   const [selectedChapter, setSelectedChapter] = useState(null);\n\n//   const handleClose = () => setShow(false);\n//   const handleShow = (chapter) => {\n//     setSelectedChapter(chapter);\n//     setShow(true);\n//   };\n\n//   useEffect(() => {\n//     const fetchChapters = async () => {\n//       try {\n//         const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n//         console.log(\"Current Chapter response\", response.data);\n//         setChapters(response.data);\n//       } catch (error) {\n//         console.error(\"Error\", error);\n//       }\n//     };\n\n//     fetchChapters();\n//   }, []);\n\n//   return (\n//     <div>\n//       <Modal show={show} onHide={handleClose} centered>\n//         <Modal.Header>\n//           <Modal.Title className=\"text-center\">\n//             All Shlok From Chapter {selectedChapter?.chapter_number}\n//           </Modal.Title>\n//         </Modal.Header>\n\n\n//         <Modal.Body>\n//           <ListGroup>\n//           </ListGroup>\n//         </Modal.Body>\n\n\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleClose}>\n//             Close\n//           </Button>\n//           <Button variant=\"primary\" onClick={handleClose}>\n//             Save Changes\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n\n//       {chapters.map((chapter) => (\n       \n//         <div key={chapter.chapter_number} className=\"card border-warning\">\n//           <div className=\"card-body\">\n//          <h5 className=\"card-title\"> {chapter.chapter_number}. {chapter.name}</h5>\n//          <h5 className=\"card-title\">{chapter.meaning.en} / {chapter.meaning.hi}  </h5>\n//             <p className=\"card-text\">\n//               <Accordion>\n//                 <Accordion.Item eventKey=\"0\">\n//                   <Accordion.Header>Hindi Summary</Accordion.Header>\n//                   <Accordion.Body>\n//                     <b>{chapter.summary?.hi}</b>\n//                   </Accordion.Body>\n//                 </Accordion.Item>\n//                 <Accordion.Item eventKey=\"1\">\n//                   <Accordion.Header>English Summary</Accordion.Header>\n//                   <Accordion.Body>\n//                     <b>{chapter.summary?.en}</b>\n//                   </Accordion.Body>\n//                 </Accordion.Item>\n//               </Accordion>\n//             </p>\n//             <p className=\"card-text text-center\">\n//               <button className=\"btn btn-outline-danger\" onClick={() => handleShow(chapter)}>\n//                 Read Sholks\n//               </button>\n//             </p>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Slokcard;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst Slokcard = () => {\n  const [chapters, setChapters] = useState([]);\n  const [show, setShow] = useState(false);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [shlokas, setShlokas] = useState([]);\n\n  const handleClose = () => setShow(false);\n  const handleShow = (chapter) => {\n    setSelectedChapter(chapter);\n    fetchShlokas(chapter.chapter_number);\n    setShow(true);\n  };\n\n  useEffect(() => {\n    const fetchChapters = async () => {\n      try {\n        const response = await axios.get(\"https://bhagavadgitaapi.in/chapters\");\n        setChapters(response.data);\n      } catch (error) {\n        console.error(\"Error fetching chapters:\", error);\n      }\n    };\n\n    fetchChapters();\n  }, []);\n\n  const fetchShlokas = async (chapterNumber) => {\n    try {\n      const response = await axios.get(`https://bhagavadgitaapi.in/slok/${chapterNumber}/2`);\n      setShlokas(response.data.shlokas);\n      console.log(\"this second response\"+chapterNumber);\n    } catch (error) {\n      console.error(\"Error fetching shlokas:\", error);\n    }\n  };\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\nexport default Slokcard;\n\n\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,WAAW,GAAGA,CAAA,KAAML,OAAO,CAAC,KAAK,CAAC;EACxC,MAAMM,UAAU,GAAIC,OAAO,IAAK;IAC9BL,kBAAkB,CAACK,OAAO,CAAC;IAC3BC,YAAY,CAACD,OAAO,CAACE,cAAc,CAAC;IACpCT,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMwB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,qCAAqC,CAAC;QACvEd,WAAW,CAACa,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,YAAY,GAAG,MAAOQ,aAAa,IAAK;IAC5C,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,mCAAkCI,aAAc,IAAG,CAAC;MACtFZ,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;MACjCY,OAAO,CAACE,GAAG,CAAC,sBAAsB,GAACD,aAAa,CAAC;IACnD,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}